<xml xmlns="https://developers.google.com/blockly/xml"><variables><variable id="feFa|T97i9H9JI;g/b;s">buttonAPressed</variable><variable id="?h#VP~Z/fXMWU!Lse4`U">ReadLight</variable></variables><block type="pxt-on-start" id="6V[+)^0wCP/_C}[G**Bk" x="152" y="0"><statement name="HANDLER"><block type="function_call" id="?lGlet6#lS1XBi#ZuZ8Q"><mutation name="checklightlevelplay" functionid="9^vHyP7^B^}L=%j3M/Y:"/></block></statement></block><block type="device_button_event" id="O*I-rAc;_$T]Rb;nv@#c" x="642" y="166"><field name="NAME">Button.B</field><comment>d. Once button B is pressed, start reading the light level again. Only enable this once the alarm is disabled.</comment><statement name="HANDLER"><block type="controls_if" id="m21s!OMcOIXjcs-vPL[}"><value name="IF0"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="logic_compare" id="0tM0Z?.~~q/nx+Wxx)dK"><field name="OP">EQ</field><value name="A"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="variables_get" id="GhK@v.(3#e!;yM@p|Q9`"><field name="VAR" id="feFa|T97i9H9JI;g/b;s">buttonAPressed</field></block></value><value name="B"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="logic_boolean" id="`7I%HfR-+KLlJFY~.I##"><field name="BOOL">TRUE</field></block></value></block></value><statement name="DO0"><block type="function_call" id="c|=AmOsHimr(4?#Up1{f"><mutation name="checklightlevelplay" functionid="9^vHyP7^B^}L=%j3M/Y:"/></block></statement></block></statement></block><block type="device_button_event" id="HC^fLS,LeL=?Uru`HS5p" x="37" y="335"><field name="NAME">Button.A</field><comment>c. Once button A is pressed, stop the alarm.</comment><statement name="HANDLER"><block type="variables_set" id="|8Bpt-8M94!WmVRO-Rah"><field name="VAR" id="feFa|T97i9H9JI;g/b;s">buttonAPressed</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="logic_boolean" id="zdyYb+O*yxp4Xz)PawK9"><field name="BOOL">TRUE</field></block></value></block></statement></block><block type="function_definition" id="bAUg4m=jdIzbiCfhhhy," x="422" y="381"><mutation name="Alarm" functionid="v,%I6+lehvG!q1dQ8g.W"/><field name="function_name">Alarm</field><comment>3. The Alarm Function:&#10;a. Choose a tone as your alarm.&#10;b. Sound the tone, wait for a short period, and sound the tone again.</comment><statement name="STACK"><block type="device_while" id="+i@9=e4Qm=C)*d/|ePkS"><value name="COND"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="logic_negate" id="/3o#AW6UE5(OkuMJ6c*G"><value name="BOOL"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="variables_get" id="1^E~`$s[PqW-+`AzXhd:"><field name="VAR" id="feFa|T97i9H9JI;g/b;s">buttonAPressed</field></block></value></block></value><statement name="DO"><block type="device_play_note" id="AhslHRuqSX#E{Qqg+Pma"><value name="note"><shadow type="device_note" id="u-~*7l1L1m}EgQNI2@U6"><field name="name">587</field></shadow></value><value name="duration"><shadow type="device_beat" id="7;LZMak*tkX[C{VO3nzI"><field name="fraction">BeatFraction.Whole</field></shadow></value><next><block type="device_pause" id="[@=A7-KrjyA;dbg_UUm%"><value name="pause"><shadow type="timePicker" id="mVl,;j)5L[D33Vo!?BdE"><field name="ms">1000</field></shadow></value></block></next></block></statement></block></statement></block><block type="function_definition" id="hv~U{Pv(R3EB[SqK]]cG" x="0" y="561"><mutation name="checklightlevelplay" functionid="9^vHyP7^B^}L=%j3M/Y:"/><field name="function_name">checklightlevelplay</field><comment>1. Read in the light sensor and store it in an appropriately named variable.&#10;2. When the light sensor gets above 20 (or whatever you feel is a sufficient level) it will call the "Alarm" Function and stop reading light levels.</comment><statement name="STACK"><block type="variables_set" id="Hk4X*ZD;wLXHtG)}O?83"><field name="VAR" id="feFa|T97i9H9JI;g/b;s">buttonAPressed</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="logic_boolean" id="9v[aTL#kWMP^}CS0PF:)"><field name="BOOL">FALSE</field></block></value><next><block type="device_while" id="cRJb[KG$=j^sK(n5K3no"><value name="COND"><shadow type="logic_boolean" id="2ol9w0~)MneVRAfEd:.1"><field name="BOOL">TRUE</field></shadow></value><statement name="DO"><block type="variables_set" id="2^|ky/v_l=c!-=vs}iOE"><field name="VAR" id="?h#VP~Z/fXMWU!Lse4`U">ReadLight</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="device_get_light_level" id="8vIu4aTR%E2fo|^mS!TO"/></value><next><block type="controls_if" id="mOsj[ZR2o:Qp.]m~Y2fF"><value name="IF0"><shadow type="logic_boolean"><field name="BOOL">TRUE</field></shadow><block type="logic_compare" id="tnq444UGQ1|cTy+CJ@Xp"><field name="OP">GTE</field><value name="A"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="variables_get" id="ozZi:4`c,Tb0ZXj!cn4d"><field name="VAR" id="?h#VP~Z/fXMWU!Lse4`U">ReadLight</field></block></value><value name="B"><shadow type="math_number" id=",.cQm1XME28bN6MWhRPg"><field name="NUM">150</field></shadow></value></block></value><statement name="DO0"><block type="function_call" id="We?3$IMh[rMv2U_Aka@0"><mutation name="Alarm" functionid="v,%I6+lehvG!q1dQ8g.W"/><next><block type="break_keyword" id="wFWH@c.jL7.o,(Ss.FF%"/></next></block></statement></block></next></block></statement></block></next></block></statement></block></xml>